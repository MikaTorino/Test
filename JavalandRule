public class JavalandRule {
	//オブジェクトの同値性をオブジェクト内の名前によってのみ判定
	@Override
	public boolean equals(Object other) {
		if(this == other) {
			return true;
		}
		if(!(other instanceof User)) {
			return false;
		}
		User otherUser = (User)other;
		if(this.name.equals(otherUser.getName())) {
			return true;
		}
		return false;
	}
	
	@Override
	public int hashCode() {
		return this.id;
	}
	
	//入力値と文字数が規定通りか確認する
	public String checkRule(String key, int numOfChar) throws Exception {
		//文字数が1～10ではないなら例外をスロー
		if (numOfChar == 0 || numOfChar > 11) {
			throw new MyException_OutOfRange("文字数は1～10文字で入力して下さい");
		}
		
		//入力値が2文字以上の場合、1文字目がAで始まるなら範囲外として例外をスロー
		if (numOfChar > 1 && key.startsWith("A")) {
			throw new MyException_OutOfRange("2文字以上の場合、先頭にAを記載できません");
		}
		
		//入力値を1文字ずつ判定。JavalandNumクラスの定数と一致しない場合例外をスロー
		for (int i = 0; j < numOfChar; i++) {
			if(!(JavalandNum.equals(key.charAt(i)))) {
				throw new MyException_OutOfRange("文字はA～Eの範囲で入力して下さい");
			}
		}
		return key;
	}
}
